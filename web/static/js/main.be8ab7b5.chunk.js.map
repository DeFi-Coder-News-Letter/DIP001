{"version":3,"sources":["images/bianji.svg","images/USDC.svg","utils.js","component/handlerItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","format_persentage","num","format_balance","numStr","decimals","decimalPlace","toLocaleString","replace","str","slice","res","length","indexOf","format_str_to_K","str_num","reg","part_a","split","part_b","HandlerItem","props","className","platform_map","this","TargetHandlerAddress","toLocaleLowerCase","Number","data","onClick","del_item","index","clear_item","ratio","React","Component","callback","key","console","log","App","get_handler_arr","t_arr","j","state","arr_handler_address","Dispatcher","methods","getTHData","call","then","res_Propotion","t_num","setState","arr_handler","addTargetHandler","visible_add_handler","showModal","showModal_TR_ratio","visible_TR_ratio","Reserve_Upper_Limit_cp","Reserve_Upper_Limit","Reserve_Lower_Limit_cp","Reserve_Lower_Limit","showModal_Handler_ratio","i","arr_Propotion","visible_Handler_ratio","handler_ratio_arr","showModal_Beneficiary","visible_Beneficiary","handleCancel_add_handler","e","handleCancel_TR_ratio","handleCancel_Handler_ratio","handleCancel_Beneficiary","handleCancel_click_action","visible_click_action","add_handler_change","val","isAddress","add_handler_address","add_handler_enable","handler_ratio_change","t_total","handler_ratio_enable","input_Upper_change","Upper_Limit_enable","input_Lower_change","Lower_Limit_enable","add_handler_click","estimateGas","from","my_account","err","gasLimit","new_web3","eth","getGasPrice","gasPrice","send","gas","Math","ceil","reject","res_hash","timerOBJ","tempRnum","random","setInterval","getTransactionReceipt","res_fail","res_success","clearInterval","get_handler_ratio_arr","openNotification","withdrawProfit","update_all","trigger","update_Beneficiary_change","update_Beneficiary","Upper_Limit_click","setReserveUpperLimit","get_Upper_Lower","Lower_Limit_click","setReserveLowerLimit","handler_ratio_click","setAimedPropotion","update_Beneficiary_click","update_Beneficiary_enable","setProfitBeneficiary","update_ProfitBeneficiary","update_click_action_click","click_action","drainFunds","clear_item_index","del_item_index","removeTargetHandler","getProfitBeneficiary","res_address","USDC","Contract","USDCABI","address_USDC","ProfitBeneficiary_address","balanceOf","res_balance","my_balance","getReserveUpperLimit","res_ReserveUpperLimit","getReserveLowerLimit","res_ReserveLowerLimit","getTHStructures","res_THStructures","arr_TargetHandlerAddress","DispatcherEntranceABI","address_DispatcherEntrance","getDispatcher","address_USDxPool","address_Dispatcher","DispatcherABI","getReserveRatio","res_ReserveRatio","Current_Dispatcher_Ratio","getPrinciple","res_Principle","getReserve","res_Reserve","Total_Principle","Pool_Reserve","Gross_Amount","bn","add","toString","arg_title","arg_description","notification","open","message","description","openOnEtherscan","addr","net","getNetworkType","nettype","window","Web3","givenProvider","utils","toBN","enable","res_accounts","keyboard","maskClosable","title","visible","onOk","handleOk","onCancel","centered","cancelText","footer","value","onChange","target","type","map","item","src","Edit","alt","size","TabPane","tab","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be8ab7b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bianji.49d90c28.svg\";","module.exports = __webpack_public_path__ + \"static/media/USDC.d31395fd.svg\";","export const format_persentage = (num) => {\n    return num / 10 + '%';\n}\n\nexport const format_balance = (numStr, decimals, decimalPlace = decimals) => {\n    numStr = numStr.toLocaleString().replace(/,/g, '');\n    // decimals = decimals.toString();\n    var str = (10 ** decimals).toLocaleString().replace(/,/g, '').slice(1);\n    var res = (numStr.length > decimals ?\n        numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) :\n        '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g, \"\");\n    res = res.slice(-1) === '.' ? res + '00' : res;\n    if (decimalPlace === 0)\n        return res.slice(0, res.indexOf('.'));\n    var length = res.indexOf('.') + 1 + decimalPlace;\n    return res.slice(0, length >= res.length ? res.length : length);\n    // return res.slice(-1) == '.' ? res + '00' : res;\n}\n\nexport const format_str_to_K = (str_num) => {\n    var reg = /\\d{1,3}(?=(\\d{3})+$)/g;\n\n    // if (str_num.indexOf('.') > 0) {\n    //   str_num = str_num.slice(0, str_num.indexOf('.') + 3);\n    // }\n\n    if (str_num.indexOf('.') > 0) {\n        var part_a = str_num.split('.')[0];\n        var part_b = str_num.split('.')[1];\n        part_a = (part_a + '').replace(reg, '$&,');\n        return part_a + '.' + part_b;\n    } else {\n        str_num = (str_num + '').replace(reg, '$&,');\n        return str_num;\n    }\n}","import React from 'react';\nimport {\n    format_persentage,\n    format_balance,\n    format_str_to_K\n} from '../utils';\nimport platform_map from '../abi/platform_map';\n\nexport default class HandlerItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <div className='handler-item'>\n                <div className='handler-title'>\n                    {platform_map[(this.props.TargetHandlerAddress).toLocaleLowerCase()]}\n                    {/* {this.props.TargetHandlerAddress} */}\n                    <span className='btn-clear'>\n                        {\n                            Number(this.props.data[0]) === 0 ?\n                                Number(this.props.length) > 1 ?\n                                    <span onClick={() => { this.props.del_item(this.props.index) }}>Remove</span> : null\n                                :\n                                <span onClick={() => { this.props.clear_item(this.props.index) }}>Clear</span>\n                        }\n                    </span>\n                </div>\n                <div className='item-wrap'>\n                    <div className='handler-item-left'>\n                        <div className='item'>\n                            <span className='item-title'>Supply</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[1], this.props.decimals, 2))}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Profit</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[2], this.props.decimals, 2))}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Cash</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[3], this.props.decimals, 2))}</span>\n                        </div>\n                    </div>\n\n                    <div className='handler-item-right'>\n                        <div className='item'>\n                            <span className='item-title'>Principle</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[0], this.props.decimals, 2))}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Ratio</span>\n                            <span className='item-num'>{format_persentage(this.props.ratio)}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.scss';\nimport './popup.scss';\nimport { Route, Switch } from \"react-router-dom\";\nimport HandlerItem from \"./component/handlerItem\";\n\nimport { Tabs, Modal, Input, notification } from 'antd';\nimport 'antd/dist/antd.css';\nimport USDC from './images/USDC.svg';\nimport Edit from './images/bianji.svg';\n\nimport Web3 from 'web3';\nimport DispatcherEntranceABI from './abi/dispatcherentrance';\nimport DispatcherABI from './abi/dispatcher';\nimport USDCABI from './abi/USDC';\nimport platform_map from './abi/platform_map';\n\nimport {\n  format_persentage,\n  format_balance,\n  format_str_to_K\n} from './utils';\n\n\nfunction callback(key) {\n  console.log(key);\n}\n\n\n\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      decimals: {\n        USDC: 6\n      },\n      visible_add_handler: false,\n      handler_ratio_arr: [],\n      Upper_Limit_enable: true,\n      Lower_Limit_enable: true,\n      handler_ratio_enable: true,\n      add_handler_enable: false,\n      update_Beneficiary_enable: false\n    }\n\n    this.address_USDC = '0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b';\n    this.address_USDxPool = '0xccf31dc9dcb6cb788d3c6b64f73efedfb7e9f20b';\n    this.address_DispatcherEntrance = '0xae198993b4202490f6f2893d1e42e888739a7dae';\n    this.address_Dispatcher = '';\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.isAddress = this.new_web3.utils.isAddress;\n\n    this.new_web3.givenProvider.enable().then(res_accounts => {\n      console.log(res_accounts);\n      this.setState({\n        my_account: res_accounts[0]\n      })\n    })\n\n\n    let DispatcherEntrance = new this.new_web3.eth.Contract(DispatcherEntranceABI, this.address_DispatcherEntrance);\n    DispatcherEntrance.methods.getDispatcher(this.address_USDxPool, this.address_USDC).call().then(res_address => {\n      this.address_Dispatcher = res_address;\n      let Dispatcher = new this.new_web3.eth.Contract(DispatcherABI, this.address_Dispatcher);\n\n      this.setState({\n        address_Dispatcher: this.address_Dispatcher,\n        Dispatcher: Dispatcher\n      })\n\n      // get data\n      Dispatcher.methods.getReserveRatio().call().then(res_ReserveRatio => {\n        this.setState({ Current_Dispatcher_Ratio: res_ReserveRatio })\n      })\n\n      Dispatcher.methods.getReserveUpperLimit().call().then(res_ReserveUpperLimit => {\n        Dispatcher.methods.getReserveLowerLimit().call().then(res_ReserveLowerLimit => {\n          this.setState({\n            Reserve_Upper_Limit: res_ReserveUpperLimit,\n            Reserve_Lower_Limit: res_ReserveLowerLimit\n          })\n        })\n      })\n\n      Dispatcher.methods.getPrinciple().call().then(res_Principle => {\n        Dispatcher.methods.getReserve().call().then(res_Reserve => {\n          this.setState({\n            Total_Principle: res_Principle,\n            Pool_Reserve: res_Reserve,\n            Gross_Amount: this.bn(res_Principle).add(this.bn(res_Reserve)).toString()\n          })\n        })\n      })\n\n      Dispatcher.methods.getTHStructures().call().then((res_THStructures) => {\n        this.setState({\n          arr_Propotion: res_THStructures[0],\n          arr_handler_address: res_THStructures[1],\n          arr_TargetHandlerAddress: res_THStructures[2]\n        }, () => {\n          this.get_handler_arr();\n        })\n      })\n\n      Dispatcher.methods.getProfitBeneficiary().call().then((res_address) => {\n        let USDC = new this.new_web3.eth.Contract(USDCABI, this.address_USDC);\n        this.setState({\n          USDC: USDC,\n          ProfitBeneficiary_address: res_address\n        })\n        USDC.methods.balanceOf(res_address).call().then((res_balance) => {\n          if (res_balance) {\n            this.setState({\n              my_balance: res_balance\n            }, () => {\n              console.log(this.state.my_balance)\n            })\n          }\n        });\n      })\n    })\n  }\n\n\n  get_handler_arr = (num, t_arr) => {\n    var t_arr = t_arr || [];\n    var j = num || 0;\n    console.log(j);\n\n    if (this.state.arr_handler_address.length > 0 && j < this.state.arr_handler_address.length) {\n      this.state.Dispatcher.methods.getTHData(j).call().then(res_Propotion => {\n        t_arr[j] = res_Propotion;\n        var t_num = j + 1;\n        this.get_handler_arr(t_num, t_arr);\n      })\n    } else {\n      this.setState({ arr_handler: t_arr });\n    }\n  }\n\n  addTargetHandler = () => {\n    console.log('add-Target-Handler');\n    this.setState({ visible_add_handler: true });\n  }\n\n\n\n  showModal = () => {\n    this.setState({\n      visible_add_handler: true,\n    });\n  }\n  showModal_TR_ratio = () => {\n    this.setState({\n      visible_TR_ratio: true,\n      Reserve_Upper_Limit_cp: this.state.Reserve_Upper_Limit / 10,\n      Reserve_Lower_Limit_cp: this.state.Reserve_Lower_Limit / 10\n    })\n  }\n  showModal_Handler_ratio = () => {\n    var t_arr = [];\n    for (var i = 0; i < this.state.arr_Propotion.length; i++) {\n      t_arr[i] = this.state.arr_Propotion[i] / 10\n    }\n    this.setState({\n      visible_Handler_ratio: true,\n      handler_ratio_arr: t_arr\n    })\n  }\n  showModal_Beneficiary = () => {\n    this.setState({\n      visible_Beneficiary: true,\n    });\n  }\n  handleCancel_add_handler = e => {\n    this.setState({ visible_add_handler: false });\n  }\n  handleCancel_TR_ratio = e => {\n    this.setState({ visible_TR_ratio: false });\n  }\n  handleCancel_Handler_ratio = e => {\n    this.setState({ visible_Handler_ratio: false });\n  }\n  handleCancel_Beneficiary = () => {\n    this.setState({ visible_Beneficiary: false });\n  }\n  handleCancel_click_action = () => {\n    this.setState({ visible_click_action: false });\n  }\n\n\n\n  add_handler_change = (val) => {\n    console.log(this.isAddress(val));\n    if (this.isAddress(val)) {\n      this.setState({\n        add_handler_address: val,\n        add_handler_enable: true\n      });\n    } else {\n      this.setState({\n        add_handler_address: val,\n        add_handler_enable: false\n      });\n    }\n  }\n  handler_ratio_change = (val, index) => {\n    console.log(val, index);\n    var t_arr = this.state.handler_ratio_arr;\n    t_arr[index] = val;\n    this.setState({\n      handler_ratio_arr: t_arr\n    }, () => {\n      // console.log(this.state.handler_ratio_arr);\n      var t_total = 0;\n      for (var i = 0; i < this.state.handler_ratio_arr.length; i++) {\n        t_total = Number(t_total) + Number(this.state.handler_ratio_arr[i]);\n      }\n      console.log(t_total);\n      if (t_total === 100) {\n        this.setState({ handler_ratio_enable: true })\n      } else {\n        this.setState({ handler_ratio_enable: false })\n      }\n    })\n  }\n  input_Upper_change = (val) => {\n    // console.log(typeof(val)) // val string\n    console.log(val, this.state.Reserve_Lower_Limit_cp);\n    if (val < this.state.Reserve_Lower_Limit_cp || val > 100 || val < 0) {\n      this.setState({\n        Upper_Limit_enable: false,\n        Reserve_Upper_Limit_cp: val\n      });\n      return false;\n    }\n\n    this.setState({\n      Upper_Limit_enable: true,\n      Reserve_Upper_Limit_cp: val\n    })\n  }\n  input_Lower_change = (val) => {\n    // console.log(typeof(val)) // val string\n    console.log(val, this.state.Reserve_Upper_Limit_cp);\n    if (val > this.state.Reserve_Upper_Limit_cp || val > 100 || val < 0) {\n      this.setState({\n        Lower_Limit_enable: false,\n        Reserve_Lower_Limit_cp: val\n      });\n      return false;\n    }\n\n    this.setState({\n      Lower_Limit_enable: true,\n      Reserve_Lower_Limit_cp: val\n    })\n  }\n\n\n\n\n\n  add_handler_click = () => {\n    console.log('addTargetHandler', this.state.Dispatcher);\n    this.state.Dispatcher.methods.addTargetHandler(this.state.add_handler_address).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.addTargetHandler(this.state.add_handler_address).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.get_handler_ratio_arr();\n                    this.openNotification('Success', 'Add Handler Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Add Handler Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n  withdrawProfit = () => {\n    console.log('withdrawProfit', this.state.Dispatcher);\n    this.state.Dispatcher.methods.withdrawProfit().estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.withdrawProfit().send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.update_all();\n                    this.openNotification('Success', 'Withdraw Profit Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Withdraw Profit Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n  trigger = () => {\n    console.log('trigger', this.state.Dispatcher);\n    this.state.Dispatcher.methods.trigger().estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.trigger().send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.update_all();\n                    this.openNotification('Success', 'Trigger Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Trigger Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n\n  update_Beneficiary_change = (val) => {\n    console.log(val)\n    this.setState({\n      update_Beneficiary: val\n    })\n  }\n  Upper_Limit_click = () => {\n    console.log('Upper_Limit_click')\n    if (!this.state.Upper_Limit_enable) {\n      console.log('i return u')\n      return false;\n    }\n    this.state.Dispatcher.methods.setReserveUpperLimit(this.state.Reserve_Upper_Limit_cp * 10).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setReserveUpperLimit(this.state.Reserve_Upper_Limit_cp * 10).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject);\n              this.setState({\n                visible_TR_ratio: false\n              })\n            }\n            if (res_hash) {\n              console.log(res_hash);\n              this.setState({\n                visible_TR_ratio: false\n              })\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.get_Upper_Lower();\n                    this.openNotification('Success', 'Set Upper Limit Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Set Upper Limit Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  Lower_Limit_click = () => {\n    console.log('Lower_Limit_click')\n    if (!this.state.Lower_Limit_enable) {\n      console.log('i return u')\n      return false;\n    }\n    this.state.Dispatcher.methods.setReserveLowerLimit(this.state.Reserve_Lower_Limit_cp * 10).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setReserveLowerLimit(this.state.Reserve_Lower_Limit_cp * 10).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject);\n              this.setState({\n                visible_TR_ratio: false\n              })\n            }\n            if (res_hash) {\n              console.log(res_hash);\n              this.setState({\n                visible_TR_ratio: false\n              })\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.get_Upper_Lower();\n                    this.openNotification('Success', 'Set Lower Limit Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Set Lower Limit Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  handler_ratio_click = () => {\n    console.log('setAimedPropotion', this.state.Dispatcher);\n    var t_arr = this.state.handler_ratio_arr;\n    for (var i = 0; i < this.state.handler_ratio_arr.length; i++) {\n      t_arr[i] = this.state.handler_ratio_arr[i] * 10\n    }\n    console.log(t_arr);\n\n    this.state.Dispatcher.methods.setAimedPropotion(t_arr).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setAimedPropotion(t_arr).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.get_handler_ratio_arr();\n                    this.openNotification('Success', 'Update Handler Ratio Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Update Handler Ratio Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  update_Beneficiary_click = () => {\n    console.log(this.state.update_Beneficiary);\n    if (!this.state.update_Beneficiary_enable) {\n      console.log('i return u.');\n      return false;\n    }\n    this.state.Dispatcher.methods.setProfitBeneficiary(this.state.update_Beneficiary).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setProfitBeneficiary(this.state.update_Beneficiary).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject);\n              this.setState({\n                visible_Beneficiary: false\n              });\n            }\n            if (res_hash) {\n              console.log(res_hash);\n              this.setState({\n                visible_Beneficiary: false\n              });\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.update_ProfitBeneficiary();\n                    this.openNotification('Success', 'Update ProfitBeneficiary Success.');\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                    this.openNotification('Fail', 'Update ProfitBeneficiary Fail.');\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  update_click_action_click = () => {\n    console.log('clear or del: ', this.state.click_action);\n    if (this.state.click_action === 'clear') {\n      this.state.Dispatcher.methods.drainFunds(this.state.clear_item_index).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n        this.new_web3.eth.getGasPrice((err, gasPrice) => {\n          this.state.Dispatcher.methods.drainFunds(this.state.clear_item_index).send(\n            {\n              from: this.state.my_account,\n              gas: Math.ceil(gasLimit * 1.3),\n              gasPrice: gasPrice\n            }, (reject, res_hash) => {\n              if (reject) {\n                console.log(reject)\n              }\n              if (res_hash) {\n                console.log(res_hash);\n\n                var timerOBJ = {};\n                var tempRnum = Math.random();\n                timerOBJ[tempRnum] = setInterval(() => {\n                  console.log('checking getTransactionReceipt...');\n                  this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                    if (res_success) {\n                      // console.log(JSON.stringify(res_success));\n                      console.log(' *** i got getTransactionReceipt... *** ');\n                      clearInterval(timerOBJ[tempRnum]);\n                      this.get_handler_ratio_arr();\n                      this.openNotification('Success', 'Clear Handler Success.');\n                    }\n                    if (res_fail) {\n                      console.log(res_fail);\n                      clearInterval(timerOBJ[tempRnum]);\n                      this.openNotification('Fail', 'Clear Handler Fail.');\n                    }\n                  })\n                }, 2000)\n              }\n            }\n          )\n        })\n      })\n    } else if (this.state.click_action === 'remove') {\n      console.log(this.state.arr_handler_address[this.state.del_item_index], this.state.del_item_index);\n      this.state.Dispatcher.methods.removeTargetHandler(this.state.arr_handler_address[this.state.del_item_index], this.state.del_item_index).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n        this.new_web3.eth.getGasPrice((err, gasPrice) => {\n          this.state.Dispatcher.methods.removeTargetHandler(this.state.arr_handler_address[this.state.del_item_index], this.state.del_item_index).send(\n            {\n              from: this.state.my_account,\n              gas: Math.ceil(gasLimit * 1.3),\n              gasPrice: gasPrice\n            }, (reject, res_hash) => {\n              if (reject) {\n                console.log(reject)\n              }\n              if (res_hash) {\n                console.log(res_hash);\n\n                var timerOBJ = {};\n                var tempRnum = Math.random();\n                timerOBJ[tempRnum] = setInterval(() => {\n                  console.log('checking getTransactionReceipt...');\n                  this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                    if (res_success) {\n                      // console.log(JSON.stringify(res_success));\n                      console.log(' *** i got getTransactionReceipt... *** ');\n                      clearInterval(timerOBJ[tempRnum]);\n                      this.get_handler_ratio_arr();\n                      this.openNotification('Success', 'Clear Handler Success.');\n                    }\n                    if (res_fail) {\n                      console.log(res_fail);\n                      clearInterval(timerOBJ[tempRnum]);\n                      this.openNotification('Fail', 'Clear Handler Fail.');\n                    }\n                  })\n                }, 2000)\n              }\n            }\n          )\n        })\n      })\n    }\n\n  }\n\n\n\n  update_ProfitBeneficiary = () => {\n    this.state.Dispatcher.methods.getProfitBeneficiary().call().then((res_address) => {\n      let USDC = new this.new_web3.eth.Contract(USDCABI, this.address_USDC);\n      this.setState({\n        USDC: USDC,\n        ProfitBeneficiary_address: res_address\n      })\n      USDC.methods.balanceOf(res_address).call().then((res_balance) => {\n        if (res_balance) {\n          this.setState({\n            my_balance: res_balance\n          }, () => {\n            console.log(this.state.my_balance)\n          })\n        }\n      });\n    })\n  }\n  get_Upper_Lower = () => {\n    this.state.Dispatcher.methods.getReserveUpperLimit().call().then(res_ReserveUpperLimit => {\n      this.state.Dispatcher.methods.getReserveLowerLimit().call().then(res_ReserveLowerLimit => {\n        this.setState({\n          Reserve_Upper_Limit: res_ReserveUpperLimit,\n          Reserve_Lower_Limit: res_ReserveLowerLimit\n        })\n      })\n    })\n  }\n  get_handler_ratio_arr = () => {\n    this.state.Dispatcher.methods.getTHStructures().call().then((res_THStructures) => {\n      this.setState({\n        arr_Propotion: res_THStructures[0],\n        arr_handler_address: res_THStructures[1],\n        arr_TargetHandlerAddress: res_THStructures[2]\n      }, () => {\n        this.get_handler_arr();\n      })\n    })\n  }\n\n\n\n  del_item = (index) => {\n    console.log(index)\n    this.setState({\n      del_item_index: index,\n      click_action: 'remove',\n      visible_click_action: true\n    })\n  }\n  clear_item = (index) => {\n    console.log(index)\n    this.setState({\n      clear_item_index: index,\n      click_action: 'clear',\n      visible_click_action: true\n    })\n  }\n\n\n  update_all = () => {\n    let DispatcherEntrance = new this.new_web3.eth.Contract(DispatcherEntranceABI, this.address_DispatcherEntrance);\n    DispatcherEntrance.methods.getDispatcher(this.address_USDxPool, this.address_USDC).call().then(res_address => {\n      this.address_Dispatcher = res_address;\n      let Dispatcher = new this.new_web3.eth.Contract(DispatcherABI, this.address_Dispatcher);\n\n      this.setState({\n        address_Dispatcher: this.address_Dispatcher,\n        Dispatcher: Dispatcher\n      })\n\n      // get data\n      Dispatcher.methods.getReserveRatio().call().then(res_ReserveRatio => {\n        this.setState({ Current_Dispatcher_Ratio: res_ReserveRatio })\n      })\n\n      Dispatcher.methods.getReserveUpperLimit().call().then(res_ReserveUpperLimit => {\n        Dispatcher.methods.getReserveLowerLimit().call().then(res_ReserveLowerLimit => {\n          this.setState({\n            Reserve_Upper_Limit: res_ReserveUpperLimit,\n            Reserve_Lower_Limit: res_ReserveLowerLimit\n          })\n        })\n      })\n\n      Dispatcher.methods.getPrinciple().call().then(res_Principle => {\n        Dispatcher.methods.getReserve().call().then(res_Reserve => {\n          this.setState({\n            Total_Principle: res_Principle,\n            Pool_Reserve: res_Reserve,\n            Gross_Amount: this.bn(res_Principle).add(this.bn(res_Reserve)).toString()\n          })\n        })\n      })\n\n      Dispatcher.methods.getTHStructures().call().then((res_THStructures) => {\n        this.setState({\n          arr_Propotion: res_THStructures[0],\n          arr_handler_address: res_THStructures[1],\n          arr_TargetHandlerAddress: res_THStructures[2]\n        }, () => {\n          this.get_handler_arr();\n        })\n      })\n\n      Dispatcher.methods.getProfitBeneficiary().call().then((res_address) => {\n        let USDC = new this.new_web3.eth.Contract(USDCABI, this.address_USDC);\n        this.setState({\n          USDC: USDC,\n          ProfitBeneficiary_address: res_address\n        })\n        USDC.methods.balanceOf(res_address).call().then((res_balance) => {\n          if (res_balance) {\n            this.setState({\n              my_balance: res_balance\n            }, () => {\n              console.log(this.state.my_balance)\n            })\n          }\n        });\n      })\n    })\n  }\n\n\n  openNotification = (arg_title, arg_description) => {\n    notification.open({\n      message: arg_title,\n      description: arg_description,\n      onClick: () => {\n        console.log(\"Notification Clicked!\");\n      }\n    });\n  }\n  openOnEtherscan = (addr) => {\n    console.log(addr);\n    if (!addr) {\n      return false;\n    }\n\n    this.new_web3.eth.net.getNetworkType().then(nettype => {\n      console.log(nettype)\n      if (nettype === 'rinkeby') {\n        window.open('https://rinkeby.etherscan.io/address/' + addr, \"_blank\");\n      }\n      if (nettype === 'main') {\n        window.open('https://etherscan.io/address/' + addr, \"_blank\");\n      }\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Add Handler\"\n          visible={this.state.visible_add_handler}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_add_handler}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>\n              <div className='popup-add-handler-left'>Handler: </div>\n              <div className='popup-add-handler-right'>\n                <Input\n                  value={this.state.add_handler_address}\n                  onChange={(e) => { this.add_handler_change(e.target.value) }}\n                />\n              </div>\n            </div>\n\n            <div className='popup-add-handler-confirm'>\n              <span className={this.state.add_handler_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.add_handler_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        {/* Target Reserve Ratio */}\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Target Reserve Ratio\"\n          visible={this.state.visible_TR_ratio}\n          onCancel={this.handleCancel_TR_ratio}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-TR-retio'>\n            <div className='popup-TR-item'>\n              <div className='popup-TR-1'>Upper Limit:</div>\n              <div className='popup-TR-2'>\n                <Input\n                  type='number'\n                  value={this.state.Reserve_Upper_Limit_cp}\n                  onChange={(e) => { this.input_Upper_change(e.target.value) }}\n                />%\n              </div>\n              <div className='popup-TR-3'>\n                <span className={this.state.Upper_Limit_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.Upper_Limit_click() }}>Confirm</span>\n              </div>\n            </div>\n            <div className='popup-TR-item'>\n              <div className='popup-TR-1'>Lower Limit:</div>\n              <div className='popup-TR-2'>\n                <Input\n                  type='number'\n                  value={this.state.Reserve_Lower_Limit_cp}\n                  onChange={(e) => { this.input_Lower_change(e.target.value) }}\n                />%\n              </div>\n              <div className='popup-TR-3'>\n                <span className={this.state.Lower_Limit_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.Lower_Limit_click() }}>Confirm</span>\n              </div>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Handler Ratio\"\n          visible={this.state.visible_Handler_ratio}\n          onCancel={this.handleCancel_Handler_ratio}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-handler-ratio'>\n            {\n              this.state.arr_handler_address &&\n              this.state.arr_handler_address.map((item, index) => {\n                return (\n                  <div className='popup-handler-item' key={index}>\n                    <div className='popup-handler-item-top'>\n                      <span className='item-top-title'>Handler: </span>\n                      <span className='item-top-address'>{item}</span>\n                    </div>\n                    <div className='popup-handler-item-bottom'>\n                      <Input\n                        type='number'\n                        onChange={(e) => { this.handler_ratio_change(e.target.value, index) }}\n                        value={this.state.handler_ratio_arr[index]}\n                      />%\n                    </div>\n                  </div>\n                )\n              })\n            }\n            <div className='popup-handler-confirm'>\n              <span className={this.state.handler_ratio_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.handler_ratio_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Update ProfitBeneficiary\"\n          visible={this.state.visible_Beneficiary}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_Beneficiary}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>\n              <div className='popup-add-handler-left'>Handler: </div>\n              <div className='popup-add-handler-right'>\n                <Input\n                  value={this.state.update_Beneficiary}\n                  onChange={(e) => { this.update_Beneficiary_change(e.target.value) }}\n                />\n              </div>\n            </div>\n\n            <div className='popup-add-handler-confirm'>\n              <span className={this.state.update_Beneficiary_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.update_Beneficiary_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title={this.state.click_action + ' Tips'}\n          visible={this.state.visible_click_action}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_click_action}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-tips'>\n            <div className='popup-tips-wrap'>Please make sure you want to {this.state.click_action} this TargetHandler?</div>\n\n            <div className='popup-tips-confirm'>\n              <span className='confirm-btn' onClick={() => { this.update_click_action_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <div className=\"app-left\">\n          <span className='platform-name'>USDx Protocol</span>\n          {/* <span className='platform-name'>StableSwap</span> */}\n          {/* <span className='platform-name'>Xswap</span> */}\n        </div>\n        <div className=\"app-right\">\n          <div className='dispatcher'>\n            <div className='dispatcher-left'>\n              Dispatcher\n            </div>\n            <div className='dispatcher-right'>\n              <span className='dispatcher-right-edit'>\n                <img src={Edit} alt='' onClick={this.showModal_Beneficiary} />\n              </span>\n              <span className='dispatcher-right-account' onClick={() => { this.openOnEtherscan(this.state.ProfitBeneficiary_address) }}>\n                {\n                  this.state.ProfitBeneficiary_address ?\n                    this.state.ProfitBeneficiary_address.slice(0, 4) + '...' + this.state.ProfitBeneficiary_address.slice(-4) : '···'\n                }\n              </span>\n              <span className='dispatcher-right-text'>ProfitBeneficiary</span>\n              <div className='dispatcher-right-balance'>\n                {\n                  this.state.my_balance ?\n                    format_str_to_K(format_balance(this.state.my_balance, this.state.decimals.USDC, 2)) : '···'\n                }\n              </div>\n            </div>\n          </div>\n          <div className='content-wrap'>\n            <div className=\"dispatcher-content\">\n              <Tabs onChange={callback} type=\"card\" size='large'>\n                <Tabs.TabPane tab=\"USDC\" key=\"1\">\n                  <div className='content-top'>\n                    <div className='content-top-left'>\n                      <img src={USDC} alt='' />\n                      <span className='token-name'>USDC</span>\n                      <div className='dispatcher-address'>\n                        Dispatcher:\n                        <span onClick={() => { this.openOnEtherscan(this.state.address_Dispatcher) }}>\n                          {\n                            this.state.address_Dispatcher ?\n                              ' ' + this.state.address_Dispatcher.slice(0, 8) + '...' + this.state.address_Dispatcher.slice(-8) : '···'\n                          }\n                        </span>\n                      </div>\n                    </div>\n                    <div className='content-top-right'>\n                      <span className='gross-title'>Gross Amount</span>\n                      <span className='gross-num'>\n                        {this.state.Gross_Amount ? format_str_to_K(format_balance(this.state.Gross_Amount, this.state.decimals.USDC, 2)) : '···'}\n                      </span>\n                    </div>\n                  </div>\n                  <div className='content-center'>\n                    <div className='content-center-left'>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Target Reserve Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal_TR_ratio} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {\n                            (this.state.Reserve_Upper_Limit && this.state.Reserve_Lower_Limit) ?\n                              format_persentage(this.state.Reserve_Lower_Limit) + ' ~ ' + format_persentage(this.state.Reserve_Upper_Limit) : '···'\n                          }\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Pool Reserve</div>\n                        <div className='item-num'>\n                          {this.state.Pool_Reserve ? format_str_to_K(format_balance(this.state.Pool_Reserve, this.state.decimals.USDC, 2)) : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Handler Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal_Handler_ratio} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {this.state.arr_Propotion && this.state.arr_Propotion.map((item, index) => {\n                            if (index === this.state.arr_Propotion.length - 1) {\n                              return (\n                                <span key={index}>{format_persentage(item)}</span>\n                              )\n                            } else {\n                              return (\n                                <span key={index}>{format_persentage(item) + ' / '}</span>\n                              )\n                            }\n                          })}\n                          {!this.state.arr_Propotion && '···'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className='content-center-right'>\n                      <div className='item'>\n                        <div className='item-title'>Current Dispatcher Ratio</div>\n                        <div className='item-num'>\n                          {this.state.Current_Dispatcher_Ratio ? format_persentage(this.state.Current_Dispatcher_Ratio) : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Total Principle</div>\n                        <div className='item-num'>\n                          {this.state.Total_Principle ? format_str_to_K(format_balance(this.state.Total_Principle, this.state.decimals.USDC, 2)) : '···'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='content-bottom'>\n                    <div className='content-bottom-top'>\n                      <div className='btn-wrap'>\n                        <span className='btn' onClick={() => { this.addTargetHandler() }}>Add Handler</span>\n                      </div>\n                      <div className='btn-wrap noborder'>\n                        <span className='btn' onClick={() => { this.withdrawProfit() }}>Withdraw Profit</span>\n                      </div>\n                    </div>\n                    <div className='content-bottom-bottom'>\n                      <span className='btn' onClick={() => { this.trigger() }}>Trigger</span>\n                    </div>\n                  </div>\n                </Tabs.TabPane>\n              </Tabs>\n            </div>\n            <div className='content-right'>\n              <span className='handler'>Handler</span>\n              {\n                this.state.arr_handler &&\n                this.state.arr_handler.map((item, index) => {\n                  return (\n                    <HandlerItem\n                      key={index}\n                      index={index}\n                      data={item}\n                      ratio={this.state.arr_Propotion[index]}\n                      decimals={this.state.decimals.USDC}\n                      del_item={() => { this.del_item(index) }}\n                      clear_item={() => { this.clear_item(index) }}\n                      TargetHandlerAddress={this.state.arr_TargetHandlerAddress[index]}\n                      length={this.state.arr_TargetHandlerAddress.length}\n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}