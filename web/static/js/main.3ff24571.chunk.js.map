{"version":3,"sources":["images/bianji.svg","images/USDT.svg","utils.js","component/handlerItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","format_persentage","num","format_balance","numStr","decimals","decimalPlace","toLocaleString","replace","str","slice","res","length","indexOf","format_str_to_K","str_num","reg","part_a","split","part_b","HandlerItem","props","className","platform_map","this","TargetHandlerAddress","toLocaleLowerCase","Number","data","onClick","del_item","index","clear_item","ratio","React","Component","callback","key","console","log","App","get_handler_arr","t_arr","j","state","arr_handler_address","Dispatcher","methods","getTHData","call","then","res_Propotion","t_num","setState","arr_handler","addTargetHandler","visible_add_handler","showModal","showModal_TR_ratio","visible_TR_ratio","Reserve_Upper_Limit_cp","Reserve_Upper_Limit","Reserve_Lower_Limit_cp","Reserve_Lower_Limit","showModal_Handler_ratio","i","arr_Propotion","visible_Handler_ratio","handler_ratio_arr","showModal_Beneficiary","visible_Beneficiary","handleCancel_add_handler","e","handleCancel_TR_ratio","handleCancel_Handler_ratio","handleCancel_Beneficiary","handleCancel_click_action","visible_click_action","add_handler_change","val","isAddress","add_handler_address","add_handler_enable","handler_ratio_change","t_total","handler_ratio_enable","input_Upper_change","Upper_Limit_enable","input_Lower_change","Lower_Limit_enable","add_handler_click","estimateGas","from","my_account","err","gasLimit","new_web3","eth","getGasPrice","gasPrice","send","gas","Math","ceil","reject","res_hash","timerOBJ","tempRnum","random","setInterval","getTransactionReceipt","res_fail","res_success","clearInterval","withdrawProfit","trigger","update_Beneficiary_change","update_Beneficiary","Upper_Limit_click","setReserveUpperLimit","Lower_Limit_click","setReserveLowerLimit","handler_ratio_click","setAimedPropotion","update_Beneficiary_click","setProfitBeneficiary","update_click_action_click","click_action","drainFunds","clear_item_index","removeTargetHandler","arr_TargetHandlerAddress","del_item_index","USDC","address_USDC","address_USDxPool","address_DispatcherEntrance","address_Dispatcher","window","Web3","givenProvider","bn","utils","toBN","enable","res_accounts","Contract","DispatcherEntranceABI","getDispatcher","res_address","DispatcherABI","getReserveRatio","res_ReserveRatio","Current_Dispatcher_Ratio","getReserveUpperLimit","res_ReserveUpperLimit","getReserveLowerLimit","res_ReserveLowerLimit","getPrinciple","res_Principle","getReserve","res_Reserve","Total_Principle","Pool_Reserve","Gross_Amount","add","toString","getTHStructures","res_THStructures","getProfitBeneficiary","USDCABI","ProfitBeneficiary_address","balanceOf","res_balance","my_balance","keyboard","maskClosable","title","visible","onOk","handleOk","onCancel","centered","cancelText","footer","value","onChange","target","type","map","item","src","Edit","alt","size","TabPane","tab","USDT","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ff24571.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bianji.49d90c28.svg\";","module.exports = __webpack_public_path__ + \"static/media/USDT.c916192d.svg\";","export const format_persentage = (num) => {\n    return num / 10 + '%';\n}\n\nexport const format_balance = (numStr, decimals, decimalPlace = decimals) => {\n    numStr = numStr.toLocaleString().replace(/,/g, '');\n    // decimals = decimals.toString();\n    var str = (10 ** decimals).toLocaleString().replace(/,/g, '').slice(1);\n    var res = (numStr.length > decimals ?\n        numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) :\n        '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g, \"\");\n    res = res.slice(-1) === '.' ? res + '00' : res;\n    if (decimalPlace === 0)\n        return res.slice(0, res.indexOf('.'));\n    var length = res.indexOf('.') + 1 + decimalPlace;\n    return res.slice(0, length >= res.length ? res.length : length);\n    // return res.slice(-1) == '.' ? res + '00' : res;\n}\n\nexport const format_str_to_K = (str_num) => {\n    var reg = /\\d{1,3}(?=(\\d{3})+$)/g;\n\n    // if (str_num.indexOf('.') > 0) {\n    //   str_num = str_num.slice(0, str_num.indexOf('.') + 3);\n    // }\n\n    if (str_num.indexOf('.') > 0) {\n        var part_a = str_num.split('.')[0];\n        var part_b = str_num.split('.')[1];\n        part_a = (part_a + '').replace(reg, '$&,');\n        return part_a + '.' + part_b;\n    } else {\n        str_num = (str_num + '').replace(reg, '$&,');\n        return str_num;\n    }\n}","import React from 'react';\nimport {\n    format_persentage,\n    format_balance,\n    format_str_to_K\n} from '../utils';\nimport platform_map from '../abi/platform_map';\n\nexport default class HandlerItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <div className='handler-item'>\n                <div className='handler-title'>\n                    {platform_map[(this.props.TargetHandlerAddress).toLocaleLowerCase()]}\n                    <span className='btn-clear'>\n                        {\n                            Number(this.props.data[0]) === 0 ?\n                                <span onClick={() => { this.props.del_item(this.props.index) }}>Remove</span>\n                                :\n                                <span onClick={() => { this.props.clear_item(this.props.index) }}>Clear</span>\n                        }\n                    </span>\n                </div>\n                <div className='item-wrap'>\n                    <div className='handler-item-left'>\n                        <div className='item'>\n                            <span className='item-title'>Supply</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[1], this.props.decimals, 2))}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Profit</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[2], this.props.decimals, 2))}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Cash</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[3], this.props.decimals, 2))}</span>\n                        </div>\n                    </div>\n\n                    <div className='handler-item-right'>\n                        <div className='item'>\n                            <span className='item-title'>Principle</span>\n                            <span className='item-num'>{format_str_to_K(format_balance(this.props.data[0], this.props.decimals, 2))}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Ratio</span>\n                            <span className='item-num'>{format_persentage(this.props.ratio)}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.scss';\nimport './popup.scss';\nimport { Route, Switch } from \"react-router-dom\";\nimport HandlerItem from \"./component/handlerItem\";\n\nimport { Tabs, Modal, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport USDT from './images/USDT.svg';\nimport Edit from './images/bianji.svg';\n\nimport Web3 from 'web3';\nimport DispatcherEntranceABI from './abi/dispatcherentrance';\nimport DispatcherABI from './abi/dispatcher';\nimport USDCABI from './abi/USDC';\nimport platform_map from './abi/platform_map';\n\nimport {\n  format_persentage,\n  format_balance,\n  format_str_to_K\n} from './utils';\n\n\nfunction callback(key) {\n  console.log(key);\n}\n\n\n\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      decimals: {\n        USDC: 6\n      },\n      visible_add_handler: false,\n      handler_ratio_arr: [],\n      Upper_Limit_enable: true,\n      Lower_Limit_enable: true,\n      handler_ratio_enable: true,\n      add_handler_enable: false\n    }\n\n    this.address_USDC = '0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b';\n    this.address_USDxPool = '0xccf31dc9dcb6cb788d3c6b64f73efedfb7e9f20b';\n    this.address_DispatcherEntrance = '0xae198993b4202490f6f2893d1e42e888739a7dae';\n    this.address_Dispatcher = '';\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.isAddress = this.new_web3.utils.isAddress;\n\n    this.new_web3.givenProvider.enable().then(res_accounts => {\n      console.log(res_accounts);\n      this.setState({\n        my_account: res_accounts[0]\n      })\n    })\n\n\n    let DispatcherEntrance = new this.new_web3.eth.Contract(DispatcherEntranceABI, this.address_DispatcherEntrance);\n    DispatcherEntrance.methods.getDispatcher(this.address_USDxPool, this.address_USDC).call().then(res_address => {\n      this.address_Dispatcher = res_address;\n      let Dispatcher = new this.new_web3.eth.Contract(DispatcherABI, this.address_Dispatcher);\n\n      this.setState({\n        address_Dispatcher: this.address_Dispatcher,\n        Dispatcher: Dispatcher\n      })\n\n      // get data\n      Dispatcher.methods.getReserveRatio().call().then(res_ReserveRatio => {\n        this.setState({ Current_Dispatcher_Ratio: res_ReserveRatio })\n      })\n\n      Dispatcher.methods.getReserveUpperLimit().call().then(res_ReserveUpperLimit => {\n        Dispatcher.methods.getReserveLowerLimit().call().then(res_ReserveLowerLimit => {\n          this.setState({\n            Reserve_Upper_Limit: res_ReserveUpperLimit,\n            Reserve_Lower_Limit: res_ReserveLowerLimit\n          })\n        })\n      })\n\n      Dispatcher.methods.getPrinciple().call().then(res_Principle => {\n        Dispatcher.methods.getReserve().call().then(res_Reserve => {\n          this.setState({\n            Total_Principle: res_Principle,\n            Pool_Reserve: res_Reserve,\n            Gross_Amount: this.bn(res_Principle).add(this.bn(res_Reserve)).toString()\n          })\n        })\n      })\n\n      Dispatcher.methods.getTHStructures().call().then((res_THStructures) => {\n        this.setState({\n          arr_Propotion: res_THStructures[0],\n          arr_handler_address: res_THStructures[1],\n          arr_TargetHandlerAddress: res_THStructures[2]\n        }, () => {\n          this.get_handler_arr();\n        })\n      })\n\n      Dispatcher.methods.getProfitBeneficiary().call().then((res_address) => {\n        let USDC = new this.new_web3.eth.Contract(USDCABI, this.address_USDC);\n        this.setState({\n          USDC: USDC,\n          ProfitBeneficiary_address: res_address\n        })\n        USDC.methods.balanceOf(res_address).call().then((res_balance) => {\n          if (res_balance) {\n            this.setState({\n              my_balance: res_balance\n            }, () => {\n              console.log(this.state.my_balance)\n            })\n          }\n        });\n      })\n    })\n  }\n\n\n  get_handler_arr = (num, t_arr) => {\n    var t_arr = t_arr || [];\n    var j = num || 0;\n    console.log(j);\n\n    if (this.state.arr_handler_address.length > 0 && j < this.state.arr_handler_address.length) {\n      this.state.Dispatcher.methods.getTHData(j).call().then(res_Propotion => {\n        t_arr[j] = res_Propotion;\n        var t_num = j + 1;\n        this.get_handler_arr(t_num, t_arr);\n      })\n    } else {\n      this.setState({ arr_handler: t_arr });\n    }\n  }\n\n  addTargetHandler = () => {\n    console.log('add-Target-Handler');\n    this.setState({ visible_add_handler: true });\n  }\n\n\n\n  showModal = () => {\n    this.setState({\n      visible_add_handler: true,\n    });\n  }\n  showModal_TR_ratio = () => {\n    this.setState({\n      visible_TR_ratio: true,\n      Reserve_Upper_Limit_cp: this.state.Reserve_Upper_Limit / 10,\n      Reserve_Lower_Limit_cp: this.state.Reserve_Lower_Limit / 10\n    })\n  }\n  showModal_Handler_ratio = () => {\n    var t_arr = [];\n    for (var i = 0; i < this.state.arr_Propotion.length; i++) {\n      t_arr[i] = this.state.arr_Propotion[i] / 10\n    }\n    this.setState({\n      visible_Handler_ratio: true,\n      handler_ratio_arr: t_arr\n    })\n  }\n  showModal_Beneficiary = () => {\n    this.setState({\n      visible_Beneficiary: true,\n    });\n  }\n  handleCancel_add_handler = e => {\n    this.setState({ visible_add_handler: false });\n  }\n  handleCancel_TR_ratio = e => {\n    this.setState({ visible_TR_ratio: false });\n  }\n  handleCancel_Handler_ratio = e => {\n    this.setState({ visible_Handler_ratio: false });\n  }\n  handleCancel_Beneficiary = () => {\n    this.setState({ visible_Beneficiary: false });\n  }\n  handleCancel_click_action = () => {\n    this.setState({ visible_click_action: false });\n  }\n\n\n\n  add_handler_change = (val) => {\n    console.log(this.isAddress(val));\n    if (this.isAddress(val)) {\n      this.setState({\n        add_handler_address: val,\n        add_handler_enable: true\n      });\n    } else {\n      this.setState({\n        add_handler_address: val,\n        add_handler_enable: false\n      });\n    }\n  }\n  handler_ratio_change = (val, index) => {\n    console.log(val, index);\n    var t_arr = this.state.handler_ratio_arr;\n    t_arr[index] = val;\n    this.setState({\n      handler_ratio_arr: t_arr\n    }, () => {\n      // console.log(this.state.handler_ratio_arr);\n      var t_total = 0;\n      for (var i = 0; i < this.state.handler_ratio_arr.length; i++) {\n        t_total = Number(t_total) + Number(this.state.handler_ratio_arr[i]);\n      }\n      console.log(t_total);\n      if (t_total === 100) {\n        this.setState({ handler_ratio_enable: true })\n      } else {\n        this.setState({ handler_ratio_enable: false })\n      }\n    })\n  }\n  input_Upper_change = (val) => {\n    // console.log(typeof(val)) // val string\n    console.log(val, this.state.Reserve_Lower_Limit_cp);\n    if (val < this.state.Reserve_Lower_Limit_cp || val > 100 || val < 0) {\n      this.setState({\n        Upper_Limit_enable: false,\n        Reserve_Upper_Limit_cp: val\n      });\n      return false;\n    }\n\n    this.setState({\n      Upper_Limit_enable: true,\n      Reserve_Upper_Limit_cp: val\n    })\n  }\n  input_Lower_change = (val) => {\n    // console.log(typeof(val)) // val string\n    console.log(val, this.state.Reserve_Upper_Limit_cp);\n    if (val > this.state.Reserve_Upper_Limit_cp || val > 100 || val < 0) {\n      this.setState({\n        Lower_Limit_enable: false,\n        Reserve_Lower_Limit_cp: val\n      });\n      return false;\n    }\n\n    this.setState({\n      Lower_Limit_enable: true,\n      Reserve_Lower_Limit_cp: val\n    })\n  }\n\n\n\n\n\n  add_handler_click = () => {\n    console.log('addTargetHandler', this.state.Dispatcher);\n    this.state.Dispatcher.methods.addTargetHandler(this.state.add_handler_address).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.addTargetHandler(this.state.add_handler_address).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n  withdrawProfit = () => {\n    console.log('withdrawProfit', this.state.Dispatcher);\n    this.state.Dispatcher.methods.withdrawProfit().estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.withdrawProfit().send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n  trigger = () => {\n    console.log('trigger', this.state.Dispatcher);\n    this.state.Dispatcher.methods.trigger().estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.trigger().send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n\n  update_Beneficiary_change = (val) => {\n    console.log(val)\n    this.setState({\n      update_Beneficiary: val\n    })\n  }\n  Upper_Limit_click = () => {\n    console.log('Upper_Limit_click')\n    this.state.Dispatcher.methods.setReserveUpperLimit(this.state.Reserve_Upper_Limit_cp * 10).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setReserveUpperLimit(this.state.Reserve_Upper_Limit_cp * 10).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  Lower_Limit_click = () => {\n    console.log('Lower_Limit_click')\n    this.state.Dispatcher.methods.setReserveLowerLimit(this.state.Reserve_Lower_Limit_cp * 10).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setReserveLowerLimit(this.state.Reserve_Lower_Limit_cp * 10).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  handler_ratio_click = () => {\n    console.log('setAimedPropotion', this.state.Dispatcher);\n    var t_arr = this.state.handler_ratio_arr;\n    for (var i = 0; i < this.state.handler_ratio_arr.length; i++) {\n      t_arr[i] = this.state.handler_ratio_arr[i] * 10\n    }\n    console.log(t_arr);\n\n    this.state.Dispatcher.methods.setAimedPropotion(t_arr).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setAimedPropotion(t_arr).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  update_Beneficiary_click = () => {\n    console.log(this.state.update_Beneficiary);\n    this.state.Dispatcher.methods.setProfitBeneficiary(this.state.update_Beneficiary).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setProfitBeneficiary(this.state.update_Beneficiary).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  update_click_action_click = () => {\n    console.log('clear or del: ', this.state.click_action);\n    if (this.state.click_action === 'clear') {\n      this.state.Dispatcher.methods.drainFunds(this.state.clear_item_index).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n        this.new_web3.eth.getGasPrice((err, gasPrice) => {\n          this.state.Dispatcher.methods.drainFunds(this.state.clear_item_index).send(\n            {\n              from: this.state.my_account,\n              gas: Math.ceil(gasLimit * 1.3),\n              gasPrice: gasPrice\n            }, (reject, res_hash) => {\n              if (reject) {\n                console.log(reject)\n              }\n              if (res_hash) {\n                console.log(res_hash);\n\n                var timerOBJ = {};\n                var tempRnum = Math.random();\n                timerOBJ[tempRnum] = setInterval(() => {\n                  console.log('checking getTransactionReceipt...');\n                  this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                    if (res_success) {\n                      // console.log(JSON.stringify(res_success));\n                      console.log(' *** i got getTransactionReceipt... *** ');\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                    if (res_fail) {\n                      console.log(res_fail);\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                  })\n                }, 2000)\n              }\n            }\n          )\n        })\n      })\n    } else if (this.state.click_action === 'remove') {\n      this.state.Dispatcher.methods.removeTargetHandler(this.state.arr_TargetHandlerAddress[this.state.del_item_index], this.state.del_item_index).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n        this.new_web3.eth.getGasPrice((err, gasPrice) => {\n          this.state.Dispatcher.methods.removeTargetHandler(this.state.arr_TargetHandlerAddress[this.state.del_item_index], this.state.del_item_index).send(\n            {\n              from: this.state.my_account,\n              gas: Math.ceil(gasLimit * 1.3),\n              gasPrice: gasPrice\n            }, (reject, res_hash) => {\n              if (reject) {\n                console.log(reject)\n              }\n              if (res_hash) {\n                console.log(res_hash);\n\n                var timerOBJ = {};\n                var tempRnum = Math.random();\n                timerOBJ[tempRnum] = setInterval(() => {\n                  console.log('checking getTransactionReceipt...');\n                  this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                    if (res_success) {\n                      // console.log(JSON.stringify(res_success));\n                      console.log(' *** i got getTransactionReceipt... *** ');\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                    if (res_fail) {\n                      console.log(res_fail);\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                  })\n                }, 2000)\n              }\n            }\n          )\n        })\n      })\n    }\n\n  }\n\n\n\n\n\n  del_item = (index) => {\n    console.log(index)\n    this.setState({\n      del_item_index: index,\n      click_action: 'remove',\n      visible_click_action: true\n    })\n  }\n  clear_item = (index) => {\n    console.log(index)\n    this.setState({\n      clear_item_index: index,\n      click_action: 'clear',\n      visible_click_action: true\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Add Handler\"\n          visible={this.state.visible_add_handler}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_add_handler}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>\n              <div className='popup-add-handler-left'>Handler: </div>\n              <div className='popup-add-handler-right'>\n                <Input\n                  value={this.state.add_handler_address}\n                  onChange={(e) => { this.add_handler_change(e.target.value) }}\n                />\n              </div>\n            </div>\n\n            <div className='popup-add-handler-confirm'>\n              <span className={this.state.add_handler_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.add_handler_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Target Reserve Ratio\"\n          visible={this.state.visible_TR_ratio}\n          onCancel={this.handleCancel_TR_ratio}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-TR-retio'>\n            <div className='popup-TR-item'>\n              <div className='popup-TR-1'>Upper Limit:</div>\n              <div className='popup-TR-2'>\n                <Input\n                  type='number'\n                  value={this.state.Reserve_Upper_Limit_cp}\n                  onChange={(e) => { this.input_Upper_change(e.target.value) }}\n                />%\n              </div>\n              <div className='popup-TR-3'>\n                <span className={this.state.Upper_Limit_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.Upper_Limit_click() }}>Confirm</span>\n              </div>\n            </div>\n            <div className='popup-TR-item'>\n              <div className='popup-TR-1'>Lower Limit:</div>\n              <div className='popup-TR-2'>\n                <Input\n                  type='number'\n                  value={this.state.Reserve_Lower_Limit_cp}\n                  onChange={(e) => { this.input_Lower_change(e.target.value) }}\n                />%\n              </div>\n              <div className='popup-TR-3'>\n                <span className={this.state.Lower_Limit_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.Lower_Limit_click() }}>Confirm</span>\n              </div>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Handler Ratio\"\n          visible={this.state.visible_Handler_ratio}\n          onCancel={this.handleCancel_Handler_ratio}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-handler-ratio'>\n            {\n              this.state.arr_handler_address &&\n              this.state.arr_handler_address.map((item, index) => {\n                return (\n                  <div className='popup-handler-item' key={index}>\n                    <div className='popup-handler-item-top'>\n                      <span className='item-top-title'>Handler: </span>\n                      <span className='item-top-address'>{item}</span>\n                    </div>\n                    <div className='popup-handler-item-bottom'>\n                      <Input\n                        type='number'\n                        onChange={(e) => { this.handler_ratio_change(e.target.value, index) }}\n                        value={this.state.handler_ratio_arr[index]}\n                      />%\n                    </div>\n                  </div>\n                )\n              })\n            }\n            <div className='popup-handler-confirm'>\n              <span className={this.state.handler_ratio_enable ? 'confirm-btn active' : 'confirm-btn'} onClick={() => { this.handler_ratio_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Update ProfitBeneficiary\"\n          visible={this.state.visible_Beneficiary}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_Beneficiary}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>\n              <div className='popup-add-handler-left'>Handler: </div>\n              <div className='popup-add-handler-right'>\n                <Input\n                  value={this.state.update_Beneficiary}\n                  onChange={(e) => { this.update_Beneficiary_change(e.target.value) }}\n                />\n              </div>\n            </div>\n\n            <div className='popup-add-handler-confirm'>\n              <span className='confirm-btn' onClick={() => { this.update_Beneficiary_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title={this.state.click_action + ' Tips'}\n          visible={this.state.visible_click_action}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_click_action}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-tips'>\n            <div className='popup-tips-wrap'>Please make sure you want to {this.state.click_action} this TargetHandler?</div>\n\n            <div className='popup-tips-confirm'>\n              <span className='confirm-btn' onClick={() => { this.update_click_action_click() }}>Confirm</span>\n            </div>\n          </div>\n        </Modal>\n\n        <div className=\"app-left\">\n          <span className='platform-name'>USDx Protocol</span>\n          {/* <span className='platform-name'>StableSwap</span> */}\n          {/* <span className='platform-name'>Xswap</span> */}\n        </div>\n        <div className=\"app-right\">\n          <div className='dispatcher'>\n            <div className='dispatcher-left'>Dispatcher</div>\n            <div className='dispatcher-right'>\n              <span className='dispatcher-right-edit'>\n                <img src={Edit} alt='' onClick={this.showModal_Beneficiary} />\n              </span>\n              <span className='dispatcher-right-account'>\n                {\n                  this.state.ProfitBeneficiary_address ?\n                    this.state.ProfitBeneficiary_address.slice(0, 4) + '...' + this.state.ProfitBeneficiary_address.slice(-4) : '···'\n                }\n              </span>\n              <span className='dispatcher-right-text'>ProfitBeneficiary</span>\n              <div className='dispatcher-right-balance'>\n                {\n                  this.state.my_balance ?\n                    format_str_to_K(format_balance(this.state.my_balance, this.state.decimals.USDC, 2)) : '···'\n                }\n              </div>\n            </div>\n          </div>\n          <div className='content-wrap'>\n            <div className=\"dispatcher-content\">\n              <Tabs onChange={callback} type=\"card\" size='large'>\n                <Tabs.TabPane tab=\"USDC\" key=\"1\">\n                  <div className='content-top'>\n                    <div className='content-top-left'>\n                      <img src={USDT} alt='' />\n                      <span className='token-name'>USDC</span>\n                      <div className='dispatcher-address'>\n                        Dispatcher:\n                        <span>\n                          {\n                            this.state.address_Dispatcher ?\n                              ' ' + this.state.address_Dispatcher.slice(0, 8) + '...' + this.state.address_Dispatcher.slice(-8) : '···'\n                          }\n                        </span>\n                      </div>\n                    </div>\n                    <div className='content-top-right'>\n                      <span className='gross-title'>Gross Amount</span>\n                      <span className='gross-num'>\n                        {this.state.Gross_Amount ? format_str_to_K(format_balance(this.state.Gross_Amount, this.state.decimals.USDC, 2)) : '···'}\n                      </span>\n                    </div>\n                  </div>\n                  <div className='content-center'>\n                    <div className='content-center-left'>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Target Reserve Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal_TR_ratio} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {\n                            (this.state.Reserve_Upper_Limit && this.state.Reserve_Lower_Limit) ?\n                              format_persentage(this.state.Reserve_Lower_Limit) + ' ~ ' + format_persentage(this.state.Reserve_Upper_Limit) : '···'\n                          }\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Pool Reserve</div>\n                        <div className='item-num'>\n                          {this.state.Pool_Reserve ? format_str_to_K(format_balance(this.state.Pool_Reserve, this.state.decimals.USDC, 2)) : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Handler Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal_Handler_ratio} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {this.state.arr_Propotion && this.state.arr_Propotion.map((item, index) => {\n                            if (index === this.state.arr_Propotion.length - 1) {\n                              return (\n                                <span key={index}>{format_persentage(item)}</span>\n                              )\n                            } else {\n                              return (\n                                <span key={index}>{format_persentage(item) + ' / '}</span>\n                              )\n                            }\n                          })}\n                          {!this.state.arr_Propotion && '···'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className='content-center-right'>\n                      <div className='item'>\n                        <div className='item-title'>Current Dispatcher Ratio</div>\n                        <div className='item-num'>\n                          {this.state.Current_Dispatcher_Ratio ? format_persentage(this.state.Current_Dispatcher_Ratio) : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Total Principle</div>\n                        <div className='item-num'>\n                          {this.state.Total_Principle ? format_str_to_K(format_balance(this.state.Total_Principle, this.state.decimals.USDC, 2)) : '···'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='content-bottom'>\n                    <div className='content-bottom-top'>\n                      <div className='btn-wrap'>\n                        <span className='btn' onClick={() => { this.addTargetHandler() }}>Add Handler</span>\n                      </div>\n                      <div className='btn-wrap noborder'>\n                        <span className='btn' onClick={() => { this.withdrawProfit() }}>Withdraw Profit</span>\n                      </div>\n                    </div>\n                    <div className='content-bottom-bottom'>\n                      <span className='btn' onClick={() => { this.trigger() }}>Trigger</span>\n                    </div>\n                  </div>\n                </Tabs.TabPane>\n              </Tabs>\n            </div>\n            <div className='content-right'>\n              <span className='handler'>Handler</span>\n              {\n                this.state.arr_handler &&\n                this.state.arr_handler.map((item, index) => {\n                  return (\n                    <HandlerItem\n                      key={index}\n                      index={index}\n                      data={item}\n                      ratio={this.state.arr_Propotion[index]}\n                      decimals={this.state.decimals.USDC}\n                      del_item={() => { this.del_item(index) }}\n                      clear_item={() => { this.clear_item(index) }}\n                      TargetHandlerAddress={this.state.arr_TargetHandlerAddress[index]}\n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}