{"version":3,"sources":["images/bianji.svg","images/USDT.svg","utils.js","component/handlerItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","format_persentage","num","format_balance","numStr","decimals","decimalPlace","toLocaleString","replace","str","slice","res","length","indexOf","HandlerItem","props","className","Number","this","data","onClick","del_item","index","clear_item","ratio","React","Component","callback","key","console","log","App","get_handler_arr","t_arr","j","state","arr_handler_address","Dispatcher","methods","getTHData","call","then","res_Propotion","t_num","setState","arr_handler","addTargetHandler","visible_add_handler","showModal","showModal_TR_ratio","visible_TR_ratio","Reserve_Upper_Limit_cp","Reserve_Upper_Limit","Reserve_Lower_Limit_cp","Reserve_Lower_Limit","showModal_Handler_ratio","i","arr_Propotion","visible_Handler_ratio","handler_ratio_arr","showModal_Beneficiary","visible_Beneficiary","handleCancel_add_handler","e","handleCancel_TR_ratio","handleCancel_Handler_ratio","handleCancel_Beneficiary","handleCancel_click_action","visible_click_action","add_handler_change","val","isAddress","add_handler_address","handler_ratio_change","input_Upper_change","add_handler_click","estimateGas","from","my_account","err","gasLimit","new_web3","eth","getGasPrice","gasPrice","send","gas","Math","ceil","reject","res_hash","timerOBJ","tempRnum","random","setInterval","getTransactionReceipt","res_fail","res_success","clearInterval","withdrawProfit","trigger","input_Lower_change","update_Beneficiary_change","update_Beneficiary","Upper_Limit_click","setReserveUpperLimit","Lower_Limit_click","setReserveLowerLimit","handler_ratio_click","setAimedPropotion","update_Beneficiary_click","setProfitBeneficiary","update_click_action_click","click_action","drainFunds","clear_item_index","removeTargetHandler","arr_TargetHandlerAddress","del_item_index","USDC","address_USDC","address_USDxPool","address_DispatcherEntrance","address_Dispatcher","window","Web3","givenProvider","bn","utils","toBN","enable","res_accounts","Contract","DispatcherEntranceABI","getDispatcher","res_address","DispatcherABI","getReserveRatio","res_ReserveRatio","Current_Dispatcher_Ratio","getReserveUpperLimit","res_ReserveUpperLimit","getReserveLowerLimit","res_ReserveLowerLimit","getPrinciple","res_Principle","getReserve","res_Reserve","Total_Principle","Pool_Reserve","Gross_Amount","add","toString","getTHStructures","res_THStructures","getProfitBeneficiary","USDCABI","ProfitBeneficiary_address","balanceOf","res_balance","my_balance","keyboard","maskClosable","title","visible","onOk","handleOk","onCancel","centered","cancelText","footer","value","onChange","target","map","item","src","Edit","alt","type","size","TabPane","tab","USDT","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa0f8f1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bianji.49d90c28.svg\";","module.exports = __webpack_public_path__ + \"static/media/USDT.c916192d.svg\";","export const format_persentage = (num) => {\n    return num / 10 + '%';\n}\n\nexport const format_balance = (numStr, decimals, decimalPlace = decimals) => {\n    numStr = numStr.toLocaleString().replace(/,/g, '');\n    // decimals = decimals.toString();\n    var str = (10 ** decimals).toLocaleString().replace(/,/g, '').slice(1);\n    var res = (numStr.length > decimals ?\n        numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) :\n        '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g, \"\");\n    res = res.slice(-1) === '.' ? res + '00' : res;\n    if (decimalPlace === 0)\n        return res.slice(0, res.indexOf('.'));\n    var length = res.indexOf('.') + 1 + decimalPlace;\n    return res.slice(0, length >= res.length ? res.length : length);\n    // return res.slice(-1) == '.' ? res + '00' : res;\n}","import React from 'react';\nimport { format_persentage, format_balance } from '../utils';\n\nexport default class HandlerItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <div className='handler-item'>\n                <div className='handler-title'>\n                    Compound\n                    <span className='btn-clear'>\n                        {\n                            Number(this.props.data[0]) === 0 ?\n                                <span onClick={() => { this.props.del_item(this.props.index) }}>Remove</span>\n                                :\n                                <span onClick={() => { this.props.clear_item(this.props.index) }}>Clear</span>\n                        }\n                    </span>\n                </div>\n                <div className='item-wrap'>\n                    <div className='handler-item-left'>\n                        <div className='item'>\n                            <span className='item-title'>Supply</span>\n                            <span className='item-num'>{format_balance(this.props.data[1], this.props.decimals, 2)}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Profit</span>\n                            <span className='item-num'>{format_balance(this.props.data[2], this.props.decimals, 2)}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Cash</span>\n                            <span className='item-num'>{format_balance(this.props.data[3], this.props.decimals, 2)}</span>\n                        </div>\n                    </div>\n\n                    <div className='handler-item-right'>\n                        <div className='item'>\n                            <span className='item-title'>Principle</span>\n                            <span className='item-num'>{format_balance(this.props.data[0], this.props.decimals, 2)}</span>\n                        </div>\n                        <div className='item'>\n                            <span className='item-title'>Ratio</span>\n                            <span className='item-num'>{format_persentage(this.props.ratio)}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.scss';\nimport './popup.scss';\nimport { Route, Switch } from \"react-router-dom\";\nimport HandlerItem from \"./component/handlerItem\";\n\nimport { Tabs, Modal, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport USDT from './images/USDT.svg';\nimport Edit from './images/bianji.svg';\n\nimport Web3 from 'web3';\nimport DispatcherEntranceABI from './abi/dispatcherentrance';\nimport DispatcherABI from './abi/dispatcher';\nimport USDCABI from './abi/USDC';\nimport platform_map from './abi/platform_map';\n\nimport {\n  format_persentage,\n  format_balance\n} from './utils';\n\n\nfunction callback(key) {\n  console.log(key);\n}\n\n\n\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      decimals: {\n        USDC: 6\n      },\n      visible_add_handler: false,\n      handler_ratio_arr: []\n    }\n\n    this.address_USDC = '0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b';\n    this.address_USDxPool = '0x68e54480a27ac97d36f1a866996ced4513b3a887';\n    this.address_DispatcherEntrance = '0xae198993b4202490f6f2893d1e42e888739a7dae';\n    this.address_Dispatcher = '';\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.isAddress = this.new_web3.utils.isAddress;\n\n    this.new_web3.givenProvider.enable().then(res_accounts => {\n      console.log(res_accounts);\n      this.setState({\n        my_account: res_accounts[0]\n      })\n    })\n\n\n    let DispatcherEntrance = new this.new_web3.eth.Contract(DispatcherEntranceABI, this.address_DispatcherEntrance);\n    DispatcherEntrance.methods.getDispatcher(this.address_USDxPool, this.address_USDC).call().then(res_address => {\n      this.address_Dispatcher = res_address;\n      let Dispatcher = new this.new_web3.eth.Contract(DispatcherABI, this.address_Dispatcher);\n\n      this.setState({\n        address_Dispatcher: this.address_Dispatcher,\n        Dispatcher: Dispatcher\n      })\n\n      // get data\n      Dispatcher.methods.getReserveRatio().call().then(res_ReserveRatio => {\n        this.setState({ Current_Dispatcher_Ratio: res_ReserveRatio })\n      })\n\n      Dispatcher.methods.getReserveUpperLimit().call().then(res_ReserveUpperLimit => {\n        Dispatcher.methods.getReserveLowerLimit().call().then(res_ReserveLowerLimit => {\n          this.setState({\n            Reserve_Upper_Limit: res_ReserveUpperLimit,\n            Reserve_Lower_Limit: res_ReserveLowerLimit\n          })\n        })\n      })\n\n      Dispatcher.methods.getPrinciple().call().then(res_Principle => {\n        Dispatcher.methods.getReserve().call().then(res_Reserve => {\n          this.setState({\n            Total_Principle: res_Principle,\n            Pool_Reserve: res_Reserve,\n            Gross_Amount: this.bn(res_Principle).add(this.bn(res_Reserve)).toString()\n          })\n        })\n      })\n\n      Dispatcher.methods.getTHStructures().call().then((res_THStructures) => {\n        this.setState({\n          arr_Propotion: res_THStructures[0],\n          arr_handler_address: res_THStructures[1],\n          arr_TargetHandlerAddress: res_THStructures[2]\n        }, () => {\n          this.get_handler_arr();\n        })\n      })\n\n      Dispatcher.methods.getProfitBeneficiary().call().then((res_address) => {\n        let USDC = new this.new_web3.eth.Contract(USDCABI, this.address_USDC);\n        this.setState({\n          USDC: USDC,\n          ProfitBeneficiary_address: res_address\n        })\n        USDC.methods.balanceOf(res_address).call().then((res_balance) => {\n          if (res_balance) {\n            this.setState({\n              my_balance: res_balance\n            }, () => {\n              console.log(this.state.my_balance)\n            })\n          }\n        });\n      })\n    })\n  }\n\n\n  get_handler_arr = (num, t_arr) => {\n    var t_arr = t_arr || [];\n    var j = num || 0;\n    console.log(j);\n\n    if (this.state.arr_handler_address.length > 0 && j < this.state.arr_handler_address.length) {\n      this.state.Dispatcher.methods.getTHData(j).call().then(res_Propotion => {\n        t_arr[j] = res_Propotion;\n        var t_num = j + 1;\n        this.get_handler_arr(t_num, t_arr);\n      })\n    } else {\n      this.setState({ arr_handler: t_arr });\n    }\n  }\n\n  addTargetHandler = () => {\n    console.log('add-Target-Handler');\n    this.setState({ visible_add_handler: true });\n  }\n\n\n\n  showModal = () => {\n    this.setState({\n      visible_add_handler: true,\n    });\n  }\n  showModal_TR_ratio = () => {\n    this.setState({\n      visible_TR_ratio: true,\n      Reserve_Upper_Limit_cp: this.state.Reserve_Upper_Limit / 10,\n      Reserve_Lower_Limit_cp: this.state.Reserve_Lower_Limit / 10\n    })\n  }\n  showModal_Handler_ratio = () => {\n    var t_arr = [];\n    for (var i = 0; i < this.state.arr_Propotion.length; i++) {\n      t_arr[i] = this.state.arr_Propotion[i] / 10\n    }\n    this.setState({\n      visible_Handler_ratio: true,\n      handler_ratio_arr: t_arr\n    })\n  }\n  showModal_Beneficiary = () => {\n    this.setState({\n      visible_Beneficiary: true,\n    });\n  }\n  handleCancel_add_handler = e => {\n    this.setState({ visible_add_handler: false });\n  }\n  handleCancel_TR_ratio = e => {\n    this.setState({ visible_TR_ratio: false });\n  }\n  handleCancel_Handler_ratio = e => {\n    this.setState({ visible_Handler_ratio: false });\n  }\n  handleCancel_Beneficiary = () => {\n    this.setState({ visible_Beneficiary: false });\n  }\n  handleCancel_click_action = () => {\n    this.setState({ visible_click_action: false });\n  }\n\n\n\n  add_handler_change = (val) => {\n    console.log(this.isAddress(val));\n    this.setState({ add_handler_address: val });\n  }\n  handler_ratio_change = (val, index) => {\n    console.log(val, index);\n    var t_arr = this.state.handler_ratio_arr;\n    t_arr[index] = val;\n    this.setState({\n      handler_ratio_arr: t_arr\n    }, () => {\n      console.log(this.state.handler_ratio_arr)\n    })\n  }\n  input_Upper_change = (val) => {\n    console.log(val)\n    this.setState({\n      Reserve_Upper_Limit_cp: val\n    })\n  }\n\n\n\n\n\n  add_handler_click = () => {\n    console.log('addTargetHandler', this.state.Dispatcher);\n    this.state.Dispatcher.methods.addTargetHandler(this.state.add_handler_address).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.addTargetHandler(this.state.add_handler_address).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n  withdrawProfit = () => {\n    console.log('withdrawProfit', this.state.Dispatcher);\n    this.state.Dispatcher.methods.withdrawProfit().estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.withdrawProfit().send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n  trigger = () => {\n    console.log('trigger', this.state.Dispatcher);\n    this.state.Dispatcher.methods.trigger().estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.trigger().send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n\n\n  input_Lower_change = (val) => {\n    console.log(val)\n    this.setState({\n      Reserve_Lower_Limit_cp: val\n    })\n  }\n  update_Beneficiary_change = (val) => {\n    console.log(val)\n    this.setState({\n      update_Beneficiary: val\n    })\n  }\n  Upper_Limit_click = () => {\n    console.log('Upper_Limit_click')\n    this.state.Dispatcher.methods.setReserveUpperLimit(this.state.Reserve_Upper_Limit_cp * 10).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setReserveUpperLimit(this.state.Reserve_Upper_Limit_cp * 10).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  Lower_Limit_click = () => {\n    console.log('Lower_Limit_click')\n    this.state.Dispatcher.methods.setReserveLowerLimit(this.state.Reserve_Lower_Limit_cp * 10).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setReserveLowerLimit(this.state.Reserve_Lower_Limit_cp * 10).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  handler_ratio_click = () => {\n    console.log('setAimedPropotion', this.state.Dispatcher);\n    var t_arr = this.state.handler_ratio_arr;\n    for (var i = 0; i < this.state.handler_ratio_arr.length; i++) {\n      t_arr[i] = this.state.handler_ratio_arr[i] * 10\n    }\n    console.log(t_arr);\n\n    this.state.Dispatcher.methods.setAimedPropotion(t_arr).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setAimedPropotion(t_arr).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  update_Beneficiary_click = () => {\n    console.log(this.state.update_Beneficiary);\n    this.state.Dispatcher.methods.setProfitBeneficiary(this.state.update_Beneficiary).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n      this.new_web3.eth.getGasPrice((err, gasPrice) => {\n        this.state.Dispatcher.methods.setProfitBeneficiary(this.state.update_Beneficiary).send(\n          {\n            from: this.state.my_account,\n            gas: Math.ceil(gasLimit * 1.3),\n            gasPrice: gasPrice\n          }, (reject, res_hash) => {\n            if (reject) {\n              console.log(reject)\n            }\n            if (res_hash) {\n              console.log(res_hash);\n\n              var timerOBJ = {};\n              var tempRnum = Math.random();\n              timerOBJ[tempRnum] = setInterval(() => {\n                console.log('checking getTransactionReceipt...');\n                this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                  if (res_success) {\n                    // console.log(JSON.stringify(res_success));\n                    console.log(' *** i got getTransactionReceipt... *** ');\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                  if (res_fail) {\n                    console.log(res_fail);\n                    clearInterval(timerOBJ[tempRnum]);\n                  }\n                })\n              }, 2000)\n            }\n          }\n        )\n      })\n    })\n  }\n  update_click_action_click = () => {\n    console.log('clear or del: ', this.state.click_action);\n    if (this.state.click_action === 'clear') {\n      this.state.Dispatcher.methods.drainFunds(this.state.clear_item_index).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n        this.new_web3.eth.getGasPrice((err, gasPrice) => {\n          this.state.Dispatcher.methods.drainFunds(this.state.clear_item_index).send(\n            {\n              from: this.state.my_account,\n              gas: Math.ceil(gasLimit * 1.3),\n              gasPrice: gasPrice\n            }, (reject, res_hash) => {\n              if (reject) {\n                console.log(reject)\n              }\n              if (res_hash) {\n                console.log(res_hash);\n\n                var timerOBJ = {};\n                var tempRnum = Math.random();\n                timerOBJ[tempRnum] = setInterval(() => {\n                  console.log('checking getTransactionReceipt...');\n                  this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                    if (res_success) {\n                      // console.log(JSON.stringify(res_success));\n                      console.log(' *** i got getTransactionReceipt... *** ');\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                    if (res_fail) {\n                      console.log(res_fail);\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                  })\n                }, 2000)\n              }\n            }\n          )\n        })\n      })\n    } else if (this.state.click_action === 'remove') {\n      this.state.Dispatcher.methods.removeTargetHandler(this.state.arr_TargetHandlerAddress[this.state.del_item_index], this.state.del_item_index).estimateGas({ from: this.state.my_account }, (err, gasLimit) => {\n        this.new_web3.eth.getGasPrice((err, gasPrice) => {\n          this.state.Dispatcher.methods.removeTargetHandler(this.state.arr_TargetHandlerAddress[this.state.del_item_index], this.state.del_item_index).send(\n            {\n              from: this.state.my_account,\n              gas: Math.ceil(gasLimit * 1.3),\n              gasPrice: gasPrice\n            }, (reject, res_hash) => {\n              if (reject) {\n                console.log(reject)\n              }\n              if (res_hash) {\n                console.log(res_hash);\n\n                var timerOBJ = {};\n                var tempRnum = Math.random();\n                timerOBJ[tempRnum] = setInterval(() => {\n                  console.log('checking getTransactionReceipt...');\n                  this.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                    if (res_success) {\n                      // console.log(JSON.stringify(res_success));\n                      console.log(' *** i got getTransactionReceipt... *** ');\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                    if (res_fail) {\n                      console.log(res_fail);\n                      clearInterval(timerOBJ[tempRnum]);\n                    }\n                  })\n                }, 2000)\n              }\n            }\n          )\n        })\n      })\n    }\n\n  }\n\n\n\n  del_item = (index) => {\n    console.log(index)\n    this.setState({\n      del_item_index: index,\n      click_action: 'remove',\n      visible_click_action: true\n    })\n  }\n  clear_item = (index) => {\n    console.log(index)\n    this.setState({\n      clear_item_index: index,\n      click_action: 'clear',\n      visible_click_action: true\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Add Handler\"\n          visible={this.state.visible_add_handler}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_add_handler}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>\n              <div className='popup-add-handler-left'>Handler: </div>\n              <div className='popup-add-handler-right'>\n                <Input\n                  value={this.state.add_handler_address}\n                  onChange={(e) => { this.add_handler_change(e.target.value) }}\n                />\n              </div>\n            </div>\n\n            <div className='popup-add-handler-confirm'>\n              <Button onClick={() => { this.add_handler_click() }}>confirm</Button>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Target Reserve Ratio\"\n          visible={this.state.visible_TR_ratio}\n          onCancel={this.handleCancel_TR_ratio}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-TR-retio'>\n            <div className='popup-TR-item'>\n              <div className='popup-TR-1'>\n                Upper Limit:\n            </div>\n              <div className='popup-TR-2'>\n                <Input value={this.state.Reserve_Upper_Limit_cp} onChange={(e) => { this.input_Upper_change(e.target.value) }} />%\n            </div>\n              <div className='popup-TR-3'>\n                <Button onClick={() => { this.Upper_Limit_click() }}>confirm</Button>\n              </div>\n            </div>\n            <div className='popup-TR-item'>\n              <div className='popup-TR-1'>\n                Lower Limit:\n            </div>\n              <div className='popup-TR-2'>\n                <Input value={this.state.Reserve_Lower_Limit_cp} onChange={(e) => { this.input_Lower_change(e.target.value) }} />%\n            </div>\n              <div className='popup-TR-3'>\n                <Button onClick={() => { this.Lower_Limit_click() }}>confirm</Button>\n              </div>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Handler Ratio\"\n          visible={this.state.visible_Handler_ratio}\n          onCancel={this.handleCancel_Handler_ratio}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-handler-ratio'>\n            {\n              this.state.arr_handler_address &&\n              this.state.arr_handler_address.map((item, index) => {\n                return (\n                  <div className='popup-handler-item' key={index}>\n                    <div className='popup-handler-item-top'>\n                      <span className='item-top-title'>Handler: </span>\n                      <span className='item-top-address'>{item}</span>\n                    </div>\n                    <div className='popup-handler-item-bottom'>\n                      <Input onChange={(e) => { this.handler_ratio_change(e.target.value, index) }} value={this.state.handler_ratio_arr[index]} />%\n                    </div>\n                  </div>\n                )\n              })\n            }\n            <div className='popup-handler-confirm'>\n              <Button onClick={() => { this.handler_ratio_click() }}>confirm</Button>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title=\"Update ProfitBeneficiary\"\n          visible={this.state.visible_Beneficiary}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_Beneficiary}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>\n              <div className='popup-add-handler-left'>Handler: </div>\n              <div className='popup-add-handler-right'>\n                <Input\n                  value={this.state.update_Beneficiary}\n                  onChange={(e) => { this.update_Beneficiary_change(e.target.value) }}\n                />\n              </div>\n            </div>\n\n            <div className='popup-add-handler-confirm'>\n              <Button onClick={() => { this.update_Beneficiary_click() }}>confirm</Button>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          keyboard={false}\n          maskClosable={false}\n          title={this.state.click_action + ' Tips'}\n          visible={this.state.visible_click_action}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel_click_action}\n          centered={true}\n          cancelText={'quxiao'}\n          footer={false}\n        >\n          <div className='popup-add-handler'>\n            <div className='popup-add-handler-wrap'>Please make sure you want to {this.state.click_action} this TargetHandler?</div>\n\n            <div className='popup-add-handler-confirm'>\n              <Button onClick={() => { this.update_click_action_click() }}>confirm</Button>\n            </div>\n          </div>\n        </Modal>\n\n        <div className=\"app-left\">\n          <span className='platform-name'>USDx Protocol</span>\n          {/* <span className='platform-name'>StableSwap</span> */}\n          {/* <span className='platform-name'>Xswap</span> */}\n        </div>\n        <div className=\"app-right\">\n          <div className='dispatcher'>\n            <div className='dispatcher-left'>Dispatcher</div>\n            <div className='dispatcher-right'>\n              <span className='dispatcher-right-edit'>\n                <img src={Edit} alt='' onClick={this.showModal_Beneficiary} />\n              </span>\n              <span className='dispatcher-right-account'>\n                {\n                  this.state.ProfitBeneficiary_address ?\n                    this.state.ProfitBeneficiary_address.slice(0, 4) + '...' + this.state.ProfitBeneficiary_address.slice(-4) : '···'\n                }\n              </span>\n              <span className='dispatcher-right-text'>ProfitBeneficiary</span>\n              <div className='dispatcher-right-balance'>\n                {\n                  this.state.my_balance ?\n                    format_balance(this.state.my_balance, this.state.decimals.USDC, 2) : '···'\n                }\n              </div>\n            </div>\n          </div>\n          <div className='content-wrap'>\n            <div className=\"dispatcher-content\">\n              <Tabs onChange={callback} type=\"card\" size='large'>\n                <Tabs.TabPane tab=\"USDC\" key=\"1\">\n                  <div className='content-top'>\n                    <div className='content-top-left'>\n                      <img src={USDT} alt='' />\n                      <span className='token-name'>USDC</span>\n                      <div className='dispatcher-address'>\n                        Dispatcher:\n                        <span>\n                          {\n                            this.state.address_Dispatcher ?\n                              ' ' + this.state.address_Dispatcher.slice(0, 8) + '...' + this.state.address_Dispatcher.slice(-8) : '···'\n                          }\n                        </span>\n                      </div>\n                    </div>\n                    <div className='content-top-right'>\n                      <span className='gross-title'>Gross Amount</span>\n                      <span className='gross-num'>\n                        {this.state.Gross_Amount ? format_balance(this.state.Gross_Amount, this.state.decimals.USDC, 2) : '···'}\n                      </span>\n                    </div>\n                  </div>\n                  <div className='content-center'>\n                    <div className='content-center-left'>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Target Reserve Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal_TR_ratio} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {\n                            (this.state.Reserve_Upper_Limit && this.state.Reserve_Lower_Limit) ?\n                              format_persentage(this.state.Reserve_Lower_Limit) + ' ~ ' + format_persentage(this.state.Reserve_Upper_Limit) : '···'\n                          }\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Pool Reserve</div>\n                        <div className='item-num'>\n                          {this.state.Pool_Reserve ? format_balance(this.state.Pool_Reserve, this.state.decimals.USDC, 2) : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Handler Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal_Handler_ratio} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {this.state.arr_Propotion && this.state.arr_Propotion.map((item, index) => {\n                            if (index === this.state.arr_Propotion.length - 1) {\n                              return (\n                                <span key={index}>{format_persentage(item)}</span>\n                              )\n                            } else {\n                              return (\n                                <span key={index}>{format_persentage(item) + ' / '}</span>\n                              )\n                            }\n                          })}\n                          {!this.state.arr_Propotion && '···'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className='content-center-right'>\n                      <div className='item'>\n                        <div className='item-title'>Current Dispatcher Ratio</div>\n                        <div className='item-num'>\n                          {this.state.Current_Dispatcher_Ratio ? format_persentage(this.state.Current_Dispatcher_Ratio) : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Total Principle</div>\n                        <div className='item-num'>\n                          {this.state.Total_Principle ? format_balance(this.state.Total_Principle, this.state.decimals.USDC, 2) : '···'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='content-bottom'>\n                    <div className='content-bottom-top'>\n                      <div className='btn-wrap'>\n                        <span className='btn' onClick={() => { this.addTargetHandler() }}>Add Handler</span>\n                      </div>\n                      <div className='btn-wrap noborder'>\n                        <span className='btn' onClick={() => { this.withdrawProfit() }}>Withdraw Profit</span>\n                      </div>\n                    </div>\n                    <div className='content-bottom-bottom'>\n                      <span className='btn' onClick={() => { this.trigger() }}>Trigger</span>\n                    </div>\n                  </div>\n                </Tabs.TabPane>\n              </Tabs>\n            </div>\n            <div className='content-right'>\n              <span className='handler'>Handler</span>\n              {\n                this.state.arr_handler &&\n                this.state.arr_handler.map((item, index) => {\n                  return (\n                    <HandlerItem\n                      key={index}\n                      index={index}\n                      data={item}\n                      ratio={this.state.arr_Propotion[index]}\n                      decimals={this.state.decimals.USDC}\n                      del_item={() => { this.del_item(index) }}\n                      clear_item={() => { this.clear_item(index) }}\n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}