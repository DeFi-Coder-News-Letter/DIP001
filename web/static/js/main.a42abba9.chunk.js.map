{"version":3,"sources":["images/bianji.svg","images/USDT.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","callback","key","console","log","App","props","showModal","setState","visible","handleOk","e","handleCancel","state","decimals","USDC","address_USDC","address_USDxPool","address_DispatcherEntrance","address_Dispatcher","new_web3","window","Web3","givenProvider","bn","utils","toBN","eth","Contract","DispatcherEntranceABI","methods","getDispatcher","call","then","res_address","Dispatcher","DispatcherABI","getReserveRatio","res_ReserveRatio","Current_Dispatcher_Ratio","getReserveUpperLimit","res_ReserveUpperLimit","getReserveLowerLimit","res_ReserveLowerLimit","Reserve_Upper_Limit","Reserve_Lower_Limit","getPrinciple","res_Principle","getReserve","res_Reserve","Total_Principle","Pool_Reserve","Gross_Amount","add","toString","getTHStructures","res_THStructures","arr_Propotion","arr_handler","arr_TargetHandlerAddress","map","handler_item","index","getTHData","res_Propotion","platform_map","t_obj","Math","random","t_num","handler_data","className","title","this","onOk","onCancel","centered","onChange","type","size","TabPane","tab","src","USDT","alt","slice","Edit","onClick","item","length","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a42abba9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bianji.49d90c28.svg\";","module.exports = __webpack_public_path__ + \"static/media/USDT.c916192d.svg\";","import React from 'react';\nimport './App.scss';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { Tabs, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport USDT from './images/USDT.svg';\nimport Edit from './images/bianji.svg';\n\nimport Web3 from 'web3';\nimport DispatcherEntranceABI from './abi/dispatcherentrance';\nimport DispatcherABI from './abi/dispatcher';\nimport platform_map from './abi/platform_map';\n\nfunction callback(key) {\n  console.log(key);\n}\n\nfunction addTargetHandler() {\n  console.log('addTargetHandler');\n}\n\nfunction withdrawProfit() {\n  console.log('withdrawProfit');\n}\n\nfunction trigger() {\n  console.log('trigger');\n}\n\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      decimals: {\n        USDC: 6\n      },\n      visible: false\n    }\n\n    this.address_USDC = '0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b';\n    this.address_USDxPool = '0x68e54480a27ac97d36f1a866996ced4513b3a887';\n    this.address_DispatcherEntrance = '0xae198993b4202490f6f2893d1e42e888739a7dae';\n    this.address_Dispatcher = '';\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n\n    let DispatcherEntrance = new this.new_web3.eth.Contract(DispatcherEntranceABI, this.address_DispatcherEntrance);\n    DispatcherEntrance.methods.getDispatcher(this.address_USDxPool, this.address_USDC).call().then(res_address => {\n      this.address_Dispatcher = res_address;\n      // console.log('this.address_Dispatcher: ', this.address_Dispatcher);\n      this.setState({ address_Dispatcher: this.address_Dispatcher })\n\n      let Dispatcher = new this.new_web3.eth.Contract(DispatcherABI, this.address_Dispatcher);\n      // console.log('Dispatcher: ', Dispatcher);\n\n      // get data\n      Dispatcher.methods.getReserveRatio().call().then(res_ReserveRatio => {\n        // console.log(res_ReserveRatio); // cur: 351\n        this.setState({ Current_Dispatcher_Ratio: res_ReserveRatio })\n      })\n\n      Dispatcher.methods.getReserveUpperLimit().call().then(res_ReserveUpperLimit => {\n        Dispatcher.methods.getReserveLowerLimit().call().then(res_ReserveLowerLimit => {\n          // console.log(res_ReserveUpperLimit); // Upper: 350\n          // console.log(res_ReserveLowerLimit); // Lower: 300 \n          this.setState({\n            Reserve_Upper_Limit: res_ReserveUpperLimit,\n            Reserve_Lower_Limit: res_ReserveLowerLimit\n          })\n        })\n      })\n\n      Dispatcher.methods.getPrinciple().call().then(res_Principle => {\n        Dispatcher.methods.getReserve().call().then(res_Reserve => {\n          // console.log(res_Principle); // Principle: 601253090100 \n          // console.log(res_Reserve); // Reserve: 325751664050 \n          this.setState({\n            Total_Principle: res_Principle,\n            Pool_Reserve: res_Reserve,\n            Gross_Amount: this.bn(res_Principle).add(this.bn(res_Reserve)).toString()\n          })\n        })\n      })\n\n      Dispatcher.methods.getTHStructures().call().then((res_THStructures) => {\n        console.log(res_THStructures);\n\n        this.setState({\n          arr_Propotion: res_THStructures[0],\n          arr_handler: res_THStructures[1],\n          arr_TargetHandlerAddress: res_THStructures[2]\n        })\n\n        res_THStructures[1].map((handler_item, index) => {\n          Dispatcher.methods.getTHData(index).call().then(res_Propotion => {\n            console.log(res_Propotion, res_THStructures[0][index], platform_map[res_THStructures[2][index]]);\n            var t_obj = {};\n            var t_num = Math.random();\n\n            t_obj.t_num = res_Propotion;\n            this.setState({ handler_data: t_obj })\n          })\n        })\n\n      })\n\n    })\n  }\n\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Modal\n          title=\"Target Reserve Ratio\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          centered={true}\n        >\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n\n        <div className=\"app-left\">\n          <span className='platform-name'>USDx Protocol</span>\n          <span className='platform-name'>StableSwap</span>\n          <span className='platform-name'>Xswap</span>\n        </div>\n        <div className=\"app-right\">\n          <span className='dispatcher'>Dispatcher</span>\n          <div className='content-wrap'>\n            <div className=\"dispatcher-content\">\n              <Tabs onChange={callback} type=\"card\" size='large'>\n                <Tabs.TabPane tab=\"USDC\" key=\"1\">\n                  <div className='content-top'>\n                    <div className='content-top-left'>\n                      <img src={USDT} alt='' />\n                      <span className='token-name'>USDC</span>\n                      <div className='dispatcher-address'>\n                        Dispatcher:\n                        <span>\n                          {\n                            this.state.address_Dispatcher ?\n                              ' ' + this.state.address_Dispatcher.slice(0, 8) + '...' + this.state.address_Dispatcher.slice(-8) : '···'\n                          }\n                        </span>\n                      </div>\n                    </div>\n                    <div className='content-top-right'>\n                      <span className='gross-title'>Gross Amount</span>\n                      <span className='gross-num'>\n                        {this.state.Gross_Amount ? this.state.Gross_Amount : '···'}\n                      </span>\n                    </div>\n                  </div>\n                  <div className='content-center'>\n                    <div className='content-center-left'>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Target Reserve Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {\n                            (this.state.Reserve_Upper_Limit && this.state.Reserve_Lower_Limit) ?\n                              this.state.Reserve_Lower_Limit + '~' + this.state.Reserve_Upper_Limit : '···'\n                          }\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Pool Reserve</div>\n                        <div className='item-num'>\n                          {this.state.Pool_Reserve ? this.state.Pool_Reserve : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>\n                          Handler Ratio\n                          <span className='img-wrap'>\n                            <img src={Edit} alt='' onClick={this.showModal} />\n                          </span>\n                        </div>\n                        <div className='item-num'>\n                          {this.state.arr_Propotion && this.state.arr_Propotion.map((item, index) => {\n                            if (index === this.state.arr_Propotion.length - 1) {\n                              return (\n                                <span key={index}>{item}</span>\n                              )\n                            } else {\n                              return (\n                                <span key={index}>{item + ' / '}</span>\n                              )\n                            }\n                          })}\n                          {!this.state.arr_Propotion && '···'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className='content-center-right'>\n                      <div className='item'>\n                        <div className='item-title'>Current Dispatcher Ratio</div>\n                        <div className='item-num'>\n                          {this.state.Current_Dispatcher_Ratio ? this.state.Current_Dispatcher_Ratio : '···'}\n                        </div>\n                      </div>\n                      <div className='item'>\n                        <div className='item-title'>Total Principle</div>\n                        <div className='item-num'>\n                          {this.state.Total_Principle ? this.state.Total_Principle : '···'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='content-bottom'>\n                    <div className='content-bottom-top'>\n                      <div className='btn-wrap'>\n                        <span className='btn' onClick={() => { addTargetHandler() }}>Add Handler</span>\n                      </div>\n                      <div className='btn-wrap noborder'>\n                        <span className='btn' onClick={() => { withdrawProfit() }}>Withdraw Profit</span>\n                      </div>\n                    </div>\n                    <div className='content-bottom-bottom'>\n                      <span className='btn' onClick={() => { trigger() }}>Trigger</span>\n                    </div>\n                  </div>\n                </Tabs.TabPane>\n              </Tabs>\n            </div>\n            <div className='content-right'>\n              <span className='handler'>Handler</span>\n              <div className='handler-item'>\n                <div className='handler-title'>\n                  Compound\n                  <span className='btn-clear'>Clear</span>\n                </div>\n                <div className='item-wrap'>\n                  <div className='handler-item-left'>\n                    <div className='item'>\n                      <span className='item-title'>Supply</span>\n                      <span className='item-num'>234325.56</span>\n                    </div>\n                    <div className='item'>\n                      <span className='item-title'>Profit</span>\n                      <span className='item-num'>234325.56</span>\n                    </div>\n                    <div className='item'>\n                      <span className='item-title'>Cash</span>\n                      <span className='item-num'>234325.56</span>\n                    </div>\n                  </div>\n\n                  <div className='handler-item-right'>\n                    <div className='item'>\n                      <span className='item-title'>Principle</span>\n                      <span className='item-num'>234325.56</span>\n                    </div>\n                    <div className='item'>\n                      <span className='item-title'>Ratio</span>\n                      <span className='item-num'>70%</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}